version: "3.9"

services:
  app:
    image: evoapicloud/evolution-api:v2.3.5
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      AUTHENTICATION_API_KEY: CREATE-YOUR-OWN-KEY
      SERVER_URL: http://localhost:8080
      DEL_INSTANCE: "false"
      DATABASE_ENABLED: "true"
      DATABASE_PROVIDER: postgresql
      DATABASE_CONNECTION_URI: postgresql://evolution:evolution_password_123@postgres:5432/evolution
      DATABASE_SAVE_DATA_INSTANCE: "true"
      DATABASE_SAVE_DATA_NEW_MESSAGE: "true"
      DATABASE_SAVE_MESSAGE_UPDATE: "true"
      DATABASE_SAVE_DATA_CONTACTS: "true"
      DATABASE_SAVE_DATA_CHATS: "true"
      DATABASE_SAVE_DATA_LABELS: "true"
      DATABASE_SAVE_DATA_HISTORIC: "true"
      DATABASE_CONNECTION_CLIENT_NAME: evolution_v2
      CACHE_REDIS_ENABLED: "true"
      CACHE_REDIS_URI: redis://redis:6379/1
      CACHE_REDIS_PREFIX_KEY: evolution_v2
      CACHE_REDIS_SAVE_INSTANCES: "false"
      CACHE_LOCAL_ENABLED: "false"
      RABBITMQ_ENABLED: "false"
      S3_ENABLED: "false"
      CONFIG_SESSION_PHONE_VERSION: "2.3000.1023204200"
      CLEAN_STORE_CLEANING_INTERVAL: 7200
      CLEAN_STORE_MESSAGES: "true"
      CLEAN_STORE_MESSAGE_UP_TO: "false"
      CLEAN_STORE_CONTACTS: "true"
      CLEAN_STORE_CHATS: "true"
    ports:
      - "8099:8080"

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTÐ“RES_DB: evolution
      POSTGRES_USER: evolution
      POSTGRES_PASSWORD: evolution_password_123
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evolution -d evolution"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:
